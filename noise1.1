library(jpeg)
library(reticulate)
library(jpeg)
library(tidyverse)
library(keras)
library(tensorflow)
install_tensorflow(extra_packages="pillow")

setwd("/Users/hallelin/Library/CloudStorage/OneDrive-purdue.edu/SPRING 2023/IE332/Project 2")

noise_change <- function(x,P){
  x_size <- length(x[,1,1])
  y_size <- length(x[1,,1])
  
  percent <- P
  max_pixels <- x_size * y_size * percent
  
  x_coords = c(floor(runif(max_pixels, min = 0, max = x_size)))
  y_coords = c(floor(runif(max_pixels, min = 0, max = y_size)))
  
  newx = x * 0 
  
  if(max_pixels > 0 ){
    for(i in 1:max_pixels){
      red = round(runif(1,min = 0,max = 1),1)
      green = round(runif(1,min = 0,max = 1),1)
      blue = round(runif(1,min = 0,max = 1),1)
      
      xindex = x_coords[i]
      yindex = y_coords[i]
      
      newx[xindex,yindex,1] <- 1 #modifies red value
      newx[xindex,yindex,2] <- 1 #modifies green value
      newx[xindex,yindex,3] <- 0 #modifies blue value
    }
   noisyx <- x + newx
  }
  writeJPEG(noisyx, "./noise.jpg")
}

target_size <- c(224, 224)

res=c("","")
f=list.files("./grass")
for (i in f){
  test_image <- image_load(paste("./grass/",i,sep="")
  )
  x <- image_to_array(test_image)
  x <- x/255
  
  #change the image
  P <- .01
  noise_change(x, P)
  
  #load the new image
  new_img <- image_load("./noise.jpg",
                        target_size = target_size)
  new <- image_to_array(new_img)
  new <- array_reshape(new, c(1, dim(new)))
  
  x <- array_reshape(x, c(1, dim(x)))
  pred <- model %>% predict(new)
  print(pred)
}  


